on: push
name: CI

jobs:
  perform-checks:
    name: 🩺 Perform checks
    runs-on: ubuntu-latest
    steps:
      # Checkout sources
      - uses: actions/checkout@v3
      # Cache Flutter SDK
      - uses: actions/cache@v2
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-
      # Cache pub cache
      - uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-cache-
      # Install Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      # Run pub get
      - name: ⬇️ Get dependencies
        run: flutter pub get
      # Run static analysis, check formatting, and run tests in parallel
      - name: 🔍️ Perform static analysis, 🎨 check formatting, and 🧪 run tests
        run: |
          flutter analyze &
          dart format --set-exit-if-changed . &
          flutter test &
          wait
  build-matrix:
    name: 🏗️ Build matrix
    runs-on: ${{ matrix.platform }}-latest
    strategy:
      matrix:
        platform: [ubuntu, windows] #TODO: macos - need to add RunnerTests with Xcode
    steps:
      # Checkout sources
      - uses: actions/checkout@v3
      # Cache Flutter SDK
      - uses: actions/cache@v2
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-
      # Cache pub cache
      - uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-cache-
      # Install Flutter
      - uses: subosito/flutter-action@v2
      # Install Linux prerequisites
      - name: Setup Flutter tools for Linux
        if: matrix.platform == 'ubuntu'
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
      # Run pub get
      - name: ⬇️ Get dependencies
        run: flutter pub get
      # Build app
      - name: 👷 Build app
        run: flutter build ${{ matrix.platform == 'ubuntu' && 'linux' || matrix.platform }}