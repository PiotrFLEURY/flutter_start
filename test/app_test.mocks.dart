// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_start/test/app_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_start/data/repositories/package_repository.dart' as _i4;
import 'package:flutter_start/domain/entities/package_details.dart' as _i3;
import 'package:flutter_start/domain/entities/package_list.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePackageList_0 extends _i1.SmartFake implements _i2.PackageList {
  _FakePackageList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePackageDetails_1 extends _i1.SmartFake
    implements _i3.PackageDetails {
  _FakePackageDetails_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PackageRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageRepositoryImpl extends _i1.Mock
    implements _i4.PackageRepositoryImpl {
  MockPackageRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.PackageList> getPackages() => (super.noSuchMethod(
        Invocation.method(
          #getPackages,
          [],
        ),
        returnValue: _i5.Future<_i2.PackageList>.value(_FakePackageList_0(
          this,
          Invocation.method(
            #getPackages,
            [],
          ),
        )),
      ) as _i5.Future<_i2.PackageList>);
  @override
  _i5.Future<_i3.PackageDetails> getDetails(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetails,
          [packageName],
        ),
        returnValue: _i5.Future<_i3.PackageDetails>.value(_FakePackageDetails_1(
          this,
          Invocation.method(
            #getDetails,
            [packageName],
          ),
        )),
      ) as _i5.Future<_i3.PackageDetails>);
}
